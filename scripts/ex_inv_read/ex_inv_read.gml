///@func	ex_inv_read(str)
///@desc	creates an inventory from a JSON string generated by ex_inv_write, and returns its id
///@arg		{string} str - JSON formatted representation of an inventory
///@return	{number}
function ex_inv_read(argument0) {

	//decode input
	var _input = json_decode(argument0);

	//create inventory structure
	var _inv = ex_inv_create(_input[? "max_size"]);
	_inv[? "size"] = _input[? "size"];

	//get items grid
	var _inv_items = _inv[? "items"];

	//load items
	var _entries = _input[? "items"];

	for(var _i = 0; _i < ds_list_size(_entries); _i++) {
    
		var _entry = _entries[| _i];
	    var _row = _entry[? "index"];
    
		_inv_items[# EX_COLS.key, _row] = _entry[? "key"];
	    _inv_items[# EX_COLS.amount, _row] = _entry[? "amount"];
	    _inv_items[# EX_COLS.stack_id, _row] = _entry[? "stack_id"];
	    _inv_items[# EX_COLS.item, _row] = ex_db_get(_entry[? "key"]);
	
	    if(ds_map_exists(_entry, "tags")) {
	        _inv_items[# EX_COLS.tags, _row] = _ex_fn_ds_map_dup(_entry[? "tags"]);        
	    }
	
	}

	//cleanup
	ds_map_destroy(_input);

	//return the inventory
	return _inv;



}
